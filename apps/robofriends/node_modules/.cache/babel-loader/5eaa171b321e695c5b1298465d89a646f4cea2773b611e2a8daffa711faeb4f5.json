{"ast":null,"code":"var _jsxFileName = \"/home/dharmite/Documents/Typescript/apps/robofriends/src/containers/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBox from './SearchBox';\nimport Scroll from './Scroll';\nimport CardList from './CardList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState('');\n  useEffect(() => {\n    const fetchRobots = async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        const users = await response.json();\n        setRobots(users);\n      } catch (error) {\n        console.error('Error fetching robots:', error);\n      }\n    };\n    fetchRobots();\n  }, []);\n  const onSearchChange = event => {\n    setSearchfield(event.currentTarget.value);\n  };\n  const filteredRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchfield.toLowerCase()));\n  return !robots.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \"RoboFriends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      searchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8n8f00woG7LQoyKPX0vmRHumRPQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBox","Scroll","CardList","jsxDEV","_jsxDEV","App","_s","robots","setRobots","searchfield","setSearchfield","fetchRobots","response","fetch","users","json","error","console","onSearchChange","event","currentTarget","value","filteredRobots","filter","robot","name","toLowerCase","includes","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","searchChange","_c","$RefreshReg$"],"sources":["/home/dharmite/Documents/Typescript/apps/robofriends/src/containers/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBox from './SearchBox';\nimport Scroll from './Scroll';\nimport CardList from './CardList';\nimport './App.css';\n\ninterface Robot {\n  id: number;\n  name: string;\n  email: string;\n}\n\nconst App: React.FC = () => {\n  const [robots, setRobots] = useState<Robot[]>([]);\n  const [searchfield, setSearchfield] = useState<string>('');\n\n  useEffect(() => {\n    const fetchRobots = async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        const users = await response.json();\n        setRobots(users);\n      } catch (error) {\n        console.error('Error fetching robots:', error);\n      }\n    };\n\n    fetchRobots();\n  }, []);\n\n  const onSearchChange = (event: React.SyntheticEvent<HTMLInputElement>): void => {\n    setSearchfield(event.currentTarget.value);\n  };\n\n  const filteredRobots = robots.filter(robot =>\n    robot.name.toLowerCase().includes(searchfield.toLowerCase())\n  );\n\n  return !robots.length ? (\n    <h1>Loading</h1>\n  ) : (\n    <div className='tc'>\n      <h1 className='f1'>RoboFriends</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <CardList robots={filteredRobots} />\n      </Scroll>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnB,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC1E,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACnCP,SAAS,CAACM,KAAK,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,cAAc,GAAIC,KAA6C,IAAW;IAC9ET,cAAc,CAACS,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EAC3C,CAAC;EAED,MAAMC,cAAc,GAAGf,MAAM,CAACgB,MAAM,CAACC,KAAK,IACxCA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClB,WAAW,CAACiB,WAAW,CAAC,CAAC,CAC7D,CAAC;EAED,OAAO,CAACnB,MAAM,CAACqB,MAAM,gBACnBxB,OAAA;IAAAyB,QAAA,EAAI;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,gBAEhB7B,OAAA;IAAK8B,SAAS,EAAC,IAAI;IAAAL,QAAA,gBACjBzB,OAAA;MAAI8B,SAAS,EAAC,IAAI;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC7B,OAAA,CAACJ,SAAS;MAACmC,YAAY,EAAEjB;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3C7B,OAAA,CAACH,MAAM;MAAA4B,QAAA,eACLzB,OAAA,CAACF,QAAQ;QAACK,MAAM,EAAEe;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CACN;AACH,CAAC;AAAC3B,EAAA,CArCID,GAAa;AAAA+B,EAAA,GAAb/B,GAAa;AAuCnB,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}