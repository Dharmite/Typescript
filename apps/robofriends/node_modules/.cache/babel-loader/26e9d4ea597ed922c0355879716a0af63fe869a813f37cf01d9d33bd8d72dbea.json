{"ast":null,"code":"var _jsxFileName = \"/home/dharmite/Documents/Typescript/apps/robofriends/src/containers/App.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [robots, setRobots] = React.useState([]);\n  const [searchfield, setSearchfield] = React.useState('');\n  React.useEffect(async () => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    const users = await response.json();\n    setRobots(users);\n  }, []);\n  const onSearchChange = event => {\n    setSearchfield(event.currentTarget.value);\n  };\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n  return !robots.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \"RoboFriends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      searchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"8n8f00woG7LQoyKPX0vmRHumRPQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","CardList","SearchBox","Scroll","jsxDEV","_jsxDEV","App","_s","robots","setRobots","useState","searchfield","setSearchfield","useEffect","response","fetch","users","json","onSearchChange","event","currentTarget","value","filteredRobots","filter","robot","name","toLowerCase","includes","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","searchChange","_c","$RefreshReg$"],"sources":["/home/dharmite/Documents/Typescript/apps/robofriends/src/containers/App.tsx"],"sourcesContent":["import * as React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nexport interface IRobot {\n  name: string;\n  id: number;\n  email: string;\n}\n\n\nconst App = () => {\n  const [robots, setRobots] = React.useState<IRobot[]>([]);\n  const [searchfield, setSearchfield] = React.useState<string>('');\n\n\n  React.useEffect(async () => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users')\n    const users = await response.json()\n    setRobots(users)\n  }, []);\n\n\n  const onSearchChange = (event: React.SyntheticEvent<HTMLInputElement>): void => {\n    setSearchfield(event.currentTarget.value)\n  }\n\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  })\n\n\n  return !robots.length ?\n    <h1>Loading</h1> :\n    (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n}\n\n\nexport default App;"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAW,EAAE,CAAC;EACxD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAS,EAAE,CAAC;EAGhEV,KAAK,CAACa,SAAS,CAAC,YAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;IAC1E,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACnCR,SAAS,CAACO,KAAK,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAME,cAAc,GAAIC,KAA6C,IAAW;IAC9EP,cAAc,CAACO,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EAC3C,CAAC;EAGD,MAAMC,cAAc,GAAGd,MAAM,CAACe,MAAM,CAACC,KAAK,IAAI;IAC5C,OAAOA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,WAAW,CAACe,WAAW,CAAC,CAAC,CAAC;EACrE,CAAC,CAAC;EAGF,OAAO,CAAClB,MAAM,CAACoB,MAAM,gBACnBvB,OAAA;IAAAwB,QAAA,EAAI;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,gBAEd5B,OAAA;IAAK6B,SAAS,EAAC,IAAI;IAAAL,QAAA,gBACjBxB,OAAA;MAAI6B,SAAS,EAAC,IAAI;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC5B,OAAA,CAACH,SAAS;MAACiC,YAAY,EAAEjB;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3C5B,OAAA,CAACF,MAAM;MAAA0B,QAAA,eACLxB,OAAA,CAACJ,QAAQ;QAACO,MAAM,EAAEc;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CACN;AACL,CAAC;AAAA1B,EAAA,CAjCKD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}